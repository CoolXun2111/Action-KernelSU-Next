name: Build KernelSU for OnePlus Ace2
permissions:
  actions: write
  contents: write
true:
  workflow_call:
    inputs:
      android_version:
        required: true
        type: string
      branch:
        required: true
        type: string
      kernel_version:
        required: true
        type: string
      manifest:
        required: true
        type: string
      model:
        required: true
        type: string
      soc:
        required: true
        type: string
jobs:
  build-kernel-oneplus-kernelsu-susfs:
    env:
      ACTIONS_RUNNER_DEBUG: true
      ACTIONS_STEP_DEBUG: true
    runs-on:
    - self-hosted
    - ubuntu-24.04
    steps:
    - name: Setup System
      run: 'set -x

        export DEBIAN_FRONTEND=noninteractive

        echo "DEBIAN_FRONTEND=noninteractive" >> $GITHUB_ENV

        echo "Work directory: $(pwd)"

        sudo rm -rf * || true

        sudo rm -rf .[^.]* || true

        '
    - name: Install Python3
      run: "set -x\nif ! command -v python3 &> /dev/null; then\n  echo \"\U0001F539\
        Python3 not found, updating apt and installing...\"\n  sudo apt update\n \
        \ sudo apt install -y python3 python-is-python3\nelse\n  echo \"\U0001F539\
        Python3 is already installed at $(which python3)\"\nfi\n"
    - name: Install Repo
      run: "set -x\nif ! command -v repo &> /dev/null; then\n  echo \"\U0001F539Repo\
        \ not found, installing...\"\n  mkdir -p ./git-repo\n  curl -sSL https://storage.googleapis.com/git-repo-downloads/repo\
        \ > ./git-repo/repo\n  chmod a+rx ./git-repo/repo\n  echo \"REPO=$GITHUB_WORKSPACE/./git-repo/repo\"\
        \ >> $GITHUB_ENV\nelse\n  echo \"\U0001F539Repo is already installed at $(which\
        \ repo)\"\n  echo \"REPO=$(which repo)\" >> $GITHUB_ENV\nfi\n"
    - name: Set CONFIG Environment Variable
      run: 'set -x

        CONFIG="${{ inputs.model }}"


        # Set CONFIG as an environment variable for future steps

        echo "CONFIG=$CONFIG" >> $GITHUB_ENV


        echo "CONFIG set to: $CONFIG"

        '
    - name: Clone AnyKernel3 and Other Dependencies
      run: 'set -x

        echo "Cloning AnyKernel3 and other dependencies..."


        ANYKERNEL_BRANCH="gki-2.0"

        SUSFS_BRANCH="gki-${{ inputs.android_version }}-${{ inputs.kernel_version
        }}"


        # Debug print the branches

        echo "Using branch for AnyKernel3: $ANYKERNEL_BRANCH"

        echo "Using branch for SUSFS: $SUSFS_BRANCH"


        # Clone repositories using the branch names

        git clone https://github.com/TheWildJames/AnyKernel3.git -b "$ANYKERNEL_BRANCH"

        git clone https://gitlab.com/simonpunk/susfs4ksu.git -b "$SUSFS_BRANCH"

        #git clone https://github.com/TheWildJames/kernel_patches.git

        git clone https://github.com/luigimak/kernel_patches.git

        '
    - name: Get SUSFS Version
      run: 'set -x

        RAW_VERSION=$(grep -oP ''SUSFS_VERSION\s+"[^"]+"'' susfs4ksu/kernel_patches/include/linux/susfs.h
        | grep -oP ''"\K[^"]+'')

        SUSFS_VERSION=${RAW_VERSION#v}

        echo "SUSFSVER=$SUSFS_VERSION" >> $GITHUB_ENV

        echo "🔹Detected SUSFS version: $SUSFS_VERSION"

        '
    - name: Initialize and Sync Kernel Source
      run: 'set -x

        echo "Creating folder for configuration: $CONFIG..."

        mkdir -p "$CONFIG"

        cd "$CONFIG"


        # Initialize and sync kernel source

        echo "Initializing and syncing kernel source..."

        $REPO init -u https://github.com/OnePlusOSS/kernel_manifest.git -b ${{ inputs.branch
        }} -m ${{ inputs.manifest }} --repo-rev=v2.16 --depth=1 --no-clone-bundle
        --no-tags


        # Sync repo and apply patches

        $REPO --version

        $REPO --trace sync -c --no-clone-bundle --no-tags --optimized-fetch -j$(nproc
        --all) --fail-fast

        '
    - name: Add KernelSU-Next
      run: 'set -x

        echo "Changing to configuration directory: $CONFIG..."

        cd "$CONFIG/kernel_platform"


        echo "Adding KernelSU-Next..."

        curl -LSs "https://raw.githubusercontent.com/KernelSU-Next/KernelSU-Next/next/kernel/setup.sh"
        | bash -s next

        #curl -LSs "https://raw.githubusercontent.com/KernelSU-Next/KernelSU-Next/next-susfs/kernel/setup.sh"
        | bash -s next-susfs

        #curl -LSs "https://raw.githubusercontent.com/KernelSU-Next/KernelSU-Next/next-susfs-dev/kernel/setup.sh"
        | bash -s next-susfs-dev


        git submodule update --init --recursive

        cd KernelSU-Next/kernel

        # next

        KSU_VERSION=$(expr $(/usr/bin/git rev-list --count HEAD) "+" 10200)

        # next-susfs & next-susfs-dev

        #KSU_VERSION=$(expr $(/usr/bin/git rev-list --count HEAD) "+" 10198)

        echo "KSUVER=$KSU_VERSION" >> $GITHUB_ENV

        echo "🔹Detected KernelSU-Next version: $KSU_VERSION"

        sed -i "s/DKSU_VERSION=11998/DKSU_VERSION=${KSU_VERSION}/" Makefile

        '
    - name: Apply SUSFS Patches
      run: "set -x\necho \"Changing to configuration directory: $CONFIG...\"\ncd \"\
        $CONFIG/kernel_platform\"\n\necho \"Applying SUSFS patches...\"\n\n# Copy\
        \ SUSFS patches\ncp ../../susfs4ksu/kernel_patches/50_add_susfs_in_gki-${{\
        \ inputs.android_version }}-${{ inputs.kernel_version }}.patch ./common/\n\
        cp ../../susfs4ksu/kernel_patches/fs/* ./common/fs/\ncp ../../susfs4ksu/kernel_patches/include/linux/*\
        \ ./common/include/linux/\n\ncd ./KernelSU-Next\n\necho \"Applying kernel-patch-susfs-v1.5.7-to-KernelSU-Next.patch...\"\
        \ncp ../../../kernel_patches/next/0001-kernel-patch-susfs-v1.5.7-to-KernelSU-Next-v1.0.7.patch\
        \ ./\npatch -p1 --forward --verbose < 0001-kernel-patch-susfs-v1.5.7-to-KernelSU-Next-v1.0.7.patch\
        \ || true\n#cp ../../../kernel_patches/next/fix_0001_susfs_157_for_ksunext.patch\
        \ ./\n#patch -p1 --forward --verbose < fix_0001_susfs_157_for_ksunext.patch\
        \ || true\nls -l *.rej || true\ncat *.rej || true\n\n# Change to common directory\
        \ and apply SUSFS patch\ncd ../common\nif [ \"${{ inputs.soc }}\" == \"sun\"\
        \ ]; then\n  sed -i '/#include <trace\\/hooks\\/blk.h>/a #include <trace/hooks/fs.h>'\
        \ ./fs/namespace.c\nfi\necho \"Applying 50_add_susfs_in_gki-.patch...\"\n\
        patch -p1 --verbose < 50_add_susfs_in_gki-${{ inputs.android_version }}-${{\
        \ inputs.kernel_version }}.patch || true\nls -l *.rej || true\ncat *.rej ||\
        \ true\n"
    - name: Apply KernelSU-Next Hooks
      run: 'set -x

        echo "Changing to configuration directory: $CONFIG..."

        cd "$CONFIG/kernel_platform/common"

        # Apply additional patch

        echo "Applying syscall_hooks.patch..."

        cp ../../../kernel_patches/next/syscall_hooks.patch ./

        patch -p1 --fuzz=3 --verbose < ./syscall_hooks.patch || true

        ls -l *.rej || true

        cat *.rej || true

        '
    - name: Apply Hide Stuff Patches
      run: 'set -x

        echo "Changing to configuration directory: $CONFIG..."

        cd "$CONFIG/kernel_platform/common"

        echo "Applying 69_hide_stuff.patch..."

        cp ../../../kernel_patches/69_hide_stuff.patch ./

        patch -p1 --fuzz=3 --verbose < 69_hide_stuff.patch || true

        ls -l *.rej || true

        cat *.rej || true

        '
    - name: Add Manager Patch
      run: 'cd "$CONFIG/kernel_platform/KernelSU-Next"

        echo "Applying manager.patch for KernelSU Next..."

        cp ../../../kernel_patches/next/manager.patch ./

        patch -p1 --fuzz=3 --verbose < manager.patch || true

        ls -l *.rej || true

        cat *.rej || true

        '
    - name: Add SUSFS Configuration Settings
      run: "set -x\necho \"Changing to configuration directory: $CONFIG...\"\ncd \"\
        $CONFIG/kernel_platform\"\n\necho \"Adding configuration settings to gki_defconfig...\"\
        \n\n# Add KSU configuration settings\necho \"CONFIG_KSU=y\" >> ./common/arch/arm64/configs/gki_defconfig\n\
        echo \"CONFIG_KSU_KPROBES_HOOK=n\" >> ./common/arch/arm64/configs/gki_defconfig\n\
        \n# Add SUSFS configuration settings\necho \"CONFIG_KSU_SUSFS=y\" >> ./common/arch/arm64/configs/gki_defconfig\n\
        echo \"CONFIG_KSU_SUSFS_HAS_MAGIC_MOUNT=y\" >> ./common/arch/arm64/configs/gki_defconfig\n\
        echo \"CONFIG_KSU_SUSFS_SUS_PATH=y\" >> ./common/arch/arm64/configs/gki_defconfig\n\
        echo \"CONFIG_KSU_SUSFS_SUS_MOUNT=y\" >> ./common/arch/arm64/configs/gki_defconfig\n\
        echo \"CONFIG_KSU_SUSFS_AUTO_ADD_SUS_KSU_DEFAULT_MOUNT=y\" >> ./common/arch/arm64/configs/gki_defconfig\n\
        echo \"CONFIG_KSU_SUSFS_AUTO_ADD_SUS_BIND_MOUNT=y\" >> ./common/arch/arm64/configs/gki_defconfig\n\
        echo \"CONFIG_KSU_SUSFS_SUS_KSTAT=y\" >> ./common/arch/arm64/configs/gki_defconfig\n\
        echo \"CONFIG_KSU_SUSFS_SUS_OVERLAYFS=n\" >> ./common/arch/arm64/configs/gki_defconfig\n\
        echo \"CONFIG_KSU_SUSFS_TRY_UMOUNT=y\" >> ./common/arch/arm64/configs/gki_defconfig\n\
        echo \"CONFIG_KSU_SUSFS_AUTO_ADD_TRY_UMOUNT_FOR_BIND_MOUNT=y\" >> ./common/arch/arm64/configs/gki_defconfig\n\
        echo \"CONFIG_KSU_SUSFS_SPOOF_UNAME=y\" >> ./common/arch/arm64/configs/gki_defconfig\n\
        echo \"CONFIG_KSU_SUSFS_ENABLE_LOG=y\" >> ./common/arch/arm64/configs/gki_defconfig\n\
        echo \"CONFIG_KSU_SUSFS_HIDE_KSU_SUSFS_SYMBOLS=y\" >> ./common/arch/arm64/configs/gki_defconfig\n\
        echo \"CONFIG_KSU_SUSFS_SPOOF_CMDLINE_OR_BOOTCONFIG=y\" >> ./common/arch/arm64/configs/gki_defconfig\n\
        echo \"CONFIG_KSU_SUSFS_OPEN_REDIRECT=y\" >> ./common/arch/arm64/configs/gki_defconfig\n\
        echo \"CONFIG_KSU_SUSFS_SUS_SU=n\" >> ./common/arch/arm64/configs/gki_defconfig\n\
        \n# Add additional tmpfs config setting\necho \"CONFIG_TMPFS_XATTR=y\" >>\
        \ ./common/arch/arm64/configs/gki_defconfig\necho \"CONFIG_TMPFS_POSIX_ACL=y\"\
        \ >> ./common/arch/arm64/configs/gki_defconfig\n\n# Add additional config\
        \ setting\necho \"CONFIG_IP_NF_TARGET_TTL=y\" >> ./common/arch/arm64/configs/gki_defconfig\n\
        echo \"CONFIG_IP6_NF_TARGET_HL=y\" >> ./common/arch/arm64/configs/gki_defconfig\n\
        echo \"CONFIG_IP6_NF_MATCH_HL=y\" >> ./common/arch/arm64/configs/gki_defconfig\n\
        \n# Add BBR Config\necho \"CONFIG_TCP_CONG_ADVANCED=y\" >> ./common/arch/arm64/configs/gki_defconfig\
        \ \necho \"CONFIG_TCP_CONG_BBR=y\" >> ./common/arch/arm64/configs/gki_defconfig\n\
        echo \"CONFIG_NET_SCH_FQ=y\" >> ./common/arch/arm64/configs/gki_defconfig\n\
        echo \"CONFIG_TCP_CONG_BIC=n\" >> ./common/arch/arm64/configs/gki_defconfig\n\
        echo \"CONFIG_TCP_CONG_WESTWOOD=n\" >> ./common/arch/arm64/configs/gki_defconfig\n\
        echo \"CONFIG_TCP_CONG_HTCP=n\" >> ./common/arch/arm64/configs/gki_defconfig\
        \ \n"
    - name: Run sed and perl Commands
      run: 'set -x

        echo "Changing to configuration directory: $CONFIG..."

        cd "$CONFIG/kernel_platform"


        echo "Running sed commands..."


        sed -i ''s/CONFIG_LTO=n/CONFIG_LTO=y/'' "./common/arch/arm64/configs/gki_defconfig"

        sed -i ''s/CONFIG_LTO_CLANG_FULL=y/CONFIG_LTO_CLANG_THIN=y/'' "./common/arch/arm64/configs/gki_defconfig"

        sed -i ''s/CONFIG_LTO_CLANG_NONE=y/CONFIG_LTO_CLANG_THIN=y/'' "./common/arch/arm64/configs/gki_defconfig"


        # Run sed commands for modifications

        sed -i ''s/check_defconfig//'' ./common/build.config.gki

        sed -i ''$s|echo "\$res"|echo "\$res"|'' ./common/scripts/setlocalversion

        sed -i ''$s|echo "\$res"|echo "\$res"|'' ./msm-kernel/scripts/setlocalversion

        sed -i ''$s|echo "\$res"|echo "\$res"|'' ./external/dtc/scripts/setlocalversion

        sed -i "/stable_scmversion_cmd/s/-maybe-dirty//g" ./build/kernel/kleaf/impl/stamp.bzl
        || echo "No stamp.bzl!"

        sed -i ''s/-dirty//'' ./common/scripts/setlocalversion

        sed -i ''s/-dirty//'' ./msm-kernel/scripts/setlocalversion

        sed -i ''s/-dirty//'' ./external/dtc/scripts/setlocalversion

        sed -i ''s/-dirty//'' ./build/kernel/kleaf/workspace_status_stamp.py || echo
        "No workspace_status_stamp.py!"


        sed -i ''/echo "LTO $LTO "/i export LTO=thin'' ./oplus/build/oplus_setup.sh

        sed -i ''s/export REPACK_IMG=true/export REPACK_IMG=false/g'' ./oplus/build/oplus_setup.sh


        # Run perl command to modify UTS_VERSION

        perl -pi -e ''s{UTS_VERSION="\$\(echo \$UTS_VERSION \$CONFIG_FLAGS \$TIMESTAMP
        \| cut -b -\$UTS_LEN\)"}{UTS_VERSION="#1 SMP PREEMPT Thu Mar 05 04:20:00 UTC
        2025"}'' ./common/scripts/mkcompile_h

        perl -pi -e ''s{UTS_VERSION="\$\(echo \$UTS_VERSION \$CONFIG_FLAGS \$TIMESTAMP
        \| cut -b -\$UTS_LEN\)"}{UTS_VERSION="#1 SMP PREEMPT Thu Mar 05 04:20:00 UTC
        2025"}'' ./msm-kernel/scripts/mkcompile_h


        find . -type f -exec sed -i ''s/\(make\s\+-C[^\n]*\)\s\+/\1 -j$(nproc) /g''
        {} +

        '
    - name: Build the Kernel
      run: "set -x\necho \"Changing to configuration directory: $CONFIG...\"\ncd \"\
        $CONFIG\"\n\necho \"Building the kernel...\"\n# Clear Cache\nsudo sh -c 'sync;\
        \ echo 3 > /proc/sys/vm/drop_caches'\n\nrm ./kernel_platform/common/android/abi_gki_protected_exports_*\
        \ || echo \"No protected exports!\"\nrm ./kernel_platform/msm-kernel/android/abi_gki_protected_exports_*\
        \ || echo \"No protected exports!\"\n\nBUILD_TYPE=\"gki\"\nBAZEL_ARGS=(--jobs=$(nproc\
        \ --all) --lto=thin --sandbox_debug --verbose_failures)\nif [ \"${{ inputs.soc\
        \ }}\" == \"sun\" ]; then\n  BUILD_TYPE=\"perf\"\n  BAZEL_ARGS+=(-g)\nfi\n\
        \n(stdbuf -oL bash -c '\n  while true; do\n    echo \"=== $(date) ===\"\n\
        \    free -h\n    echo \"======\"\n    df -h\n    echo \"======\"\n    top\
        \ -b -n 1 | head -n 15\n    echo \"\"\n    sleep 60\n  done\n') &\nMONITOR_PID=$!\n\
        trap \"kill $MONITOR_PID\" EXIT\n\nif [ -f ./kernel_platform/build_with_bazel.py\
        \ ]; then\n  ./kernel_platform/oplus/bazel/oplus_modules_variant.sh ${{ inputs.soc\
        \ }} \"$BUILD_TYPE\" \"\"\n  ./kernel_platform/build_with_bazel.py -t ${{\
        \ inputs.soc }} $BUILD_TYPE \"${BAZEL_ARGS[@]}\" -o \"$(pwd)/out\"\nelse\n\
        \  LTO=thin ./kernel_platform/oplus/build/oplus_build_kernel.sh ${{ inputs.soc\
        \ }} \"$BUILD_TYPE\"\nfi\n"
    - name: Copy Images
      run: 'set -x

        echo "Changing to configuration directory: $CONFIG..."

        cd "$CONFIG"


        echo "Copying Image"

        cp ./out/dist/Image ../AnyKernel3/Image

        '
    - name: Create AnyKernel3 ZIP File
      run: 'set -x

        echo "Navigating to AnyKernel3 directory..."

        cd ./AnyKernel3


        # Zip the files in the AnyKernel3 directory with a new naming convention

        ZIP_NAME="${{ inputs.model }}_${{ inputs.android_version }}_${{ inputs.kernel_version
        }}_KSUN-${{ env.KSUVER }}_SUSFS-${{ env.SUSFSVER }}_AnyKernel3.zip"

        echo "Creating zip file $ZIP_NAME..."

        zip -r "../$ZIP_NAME" ./*

        '
    - name: Upload Build Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: kernel-${{ env.CONFIG }}
        path: '*.zip

          '
'on':
  workflow_dispatch:
    inputs:
      ANDROID_VERSION:
        default: android12
        description: 内核安卓版本
        required: true
      BUILD_METHOD:
        default: gki
        description: 编译方式
        required: true
      CPU:
        default: sm8475
        description: 分支
        required: true
      CPUD:
        default: waipio
        description: 处理器代号
        required: true
      FEIL:
        default: oneplus_ace2_v
        description: 配置文件
        required: true
      KERNEL_VERSION:
        default: '5.10'
        description: 内核版本
        required: true
      KSUNEXT_ENABLED:
        default: true
        description: 添加 KSU Next
        required: true
        type: boolean
      SUSFS_ENABLED:
        default: true
        description: 添加 SUSFS
        required: true
        type: boolean
      SUSFS_VERSION:
        default: v1.5.7
        description: SUSFS 版本
        required: true
